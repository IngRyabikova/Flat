#include "TXLib.h"
#include "Bed.cpp"
#include "Button.cpp"
#include <fstream>
#include <iostream>

using namespace std;

int getWidth(const char* address)
{
    char header[54];
    ifstream bmp;
    bmp.open(address, ios::in | ios::binary);

    bmp.read(header, 54);
    int width = *(int *)&header[18];
    return width;
}
int getHeight(const char* address)
{
    char header[54];
    ifstream bmp;
    bmp.open(address, ios::in | ios::binary);

    bmp.read(header, 54);
    int width = *(int *)&header[22];
    return width;
}

void drawObl(HDC Krestik)
{
    int x_Krestik = 1100;
    int y_Krestik = 60;

    txSetColor(TX_ORANGE);
    txSetFillColor(TX_WHITE);
    txRectangle(1100, 60, 1300, 750);
    txTransparentBlt(txDC(), x_Krestik, y_Krestik, 60, 60, Krestik, 0, 0, TX_WHITE);
}

int main()
{
    txCreateWindow (1300, 750);

    string category = "";

    HDC Fon = txLoadImage("Картинки/Координатная сетка.bmp");
    int x_Fon = 0;
    int y_Fon = 0;

    HDC Krestik = txLoadImage("Картинки/Кнопки/Knopochka.bmp");
    int x_Krestik = 1100;
    int y_Krestik = 60;

    int count_button = 5;
    button Button[count_button];
    //Можно 2 кнопку, но у нее размер другой  #О чем речь?
    Button[0] = {txLoadImage("Картинки/Кнопки/Кнопка.bmp"), 0, 0, "Кровати","Bed", 200, 60};
    Button[1] = {Button[0].picture, 0, 0, "Диваны","Sofa", 200, 60};
    Button[2] = {Button[0].picture, 0, 0, "Столы", "Table", 200, 60};
    Button[3] = {Button[0].picture, 0, 0, "Планировки", "Plan", 200, 60 };
    Button[4] = {Button[0].picture, 0, 0, "Кухня", "Kuhna", 200, 60};

    //Координаты кнопок выбора мебели на PAGE = "redactor"
    int x_Button = 0;
    for(int i = 0; i < count_button; i = i + 1)
    {
        Button[i].y = 0;
        Button[i].x = x_Button;
        x_Button = x_Button + 250;
        //Ширина, высота
    }

    HDC button_0 = txLoadImage("Картинки/Кнопки/Кнопка.bmp");
    int x_button_0 = 0;
    int y_button_0 = 0;

    HDC Strelka =  txLoadImage("Картинки/Кнопки/Стрелочка.bmp");
    int x_Strelka= 0;
    int y_Strelka = 0;

    HDC Plan_ = txLoadImage("Картинки/Планы/План_1.bmp");
    int x_Plan_ = 0;
    int y_Plan_ = 0;


    //Меню стартовой страницы
    button Button_MENU[3];
    Button_MENU[0] = {txLoadImage("Картинки/Меню/Шестерёнка.bmp"), 390, 340, " ", "settings", 457, 122};
    Button_MENU[1] = {txLoadImage("Картинки/Меню/Плей.bmp"), 387, 187, " ", "start", 448, 132};
    Button_MENU[2] = {txLoadImage("Картинки/Меню/Дверь.bmp"), 355, 480, " ", "exit", 468, 140};
    const char* PAGE = "start";

    button Menu = {txLoadImage("Картинки/Меню/Меню.bmp"), 0, 0, ""};
    button Pause = {txLoadImage("Картинки/Меню/Пауза.bmp"), 1200, 0,  "", "", 0};

    HDC reklama = txLoadImage("Картинки/Меню/Реклама 1.bmp");
    int x_reklama = 0;
    int y_reklama = 0;

    //Это да
    bool drawOBL = false;
    int Active_Pic = -1;
    bool klik = true;

    int count_variants = 17;
    Picture variants[count_variants];
    variants[0] = {0, 0, "Картинки/Кровати/кровать_1.bmp", false, "Bed"};
    variants[1] = {0, 0, "Картинки/Кровати/Кровать_2.bmp", false, "Bed"};
    variants[2] = {0, 0, "Картинки/Кровати/Кровать_3.bmp", false, "Bed"};
    variants[3] = {0, 0, "Картинки/Кровати/Кровать_4.bmp", false, "Bed"};
    variants[4] = {1100, 150, "Картинки/Диваны/Диван_1.bmp", false, "Sofa"};
    variants[5] = {1100, 250, "Картинки/Диваны/Диван_2.bmp", false, "Sofa"};
    variants[6] = {1100, 350, "Картинки/Диваны/Диван_3.bmp", false, "Sofa"};
    variants[7] = {1100, 450, "Картинки/Диваны/Divan2.bmp", false, "Sofa"};
    variants[8] = {1105, 150, "Картинки/Столы/Стол_1.bmp", false, "Table"};
    variants[9] = {1105, 350, "Картинки/Столы/Стол_2.bmp", false, "Table"};
    variants[10]= {1105, 550, "Картинки/Столы/Стол_3.bmp", false, "Table"};
    variants[11]= {1105, 650, "Картинки/Столы/Стол_4.bmp", false, "Table"};
    variants[12]= {1210, 150, "Картинки/туалет/унитаз.bmp", false, "Kuhna"};
    variants[13]= {1110, 240, "Картинки/туалет/умывальник.bmp", false, "Kuhna"};
    variants[15]= {1110, 330, "Картинки/туалет/раковина.bmp", false, "Kuhna"};
    variants[14]= {1110, 400, "Картинки/туалет/ванна.bmp", false, "Kuhna"};
    variants[16]= {1, 470, "Картинки/туалет/плита.bmp", false, "Kuhna"};

    for (int nomer = 0; nomer < count_variants; nomer = nomer + 1)
    {
        variants[nomer].picture = txLoadImage(variants[nomer].address);
        //Ширина и высота из свойств файла
        variants[nomer].width = getWidth (variants[nomer].address);
        variants[nomer].height = getHeight(variants[nomer].address);
    }


    int y_Bed = 150;        //Координаты кроватей variants
    int y_Sofa = 150;       //Координаты диванов variants
    int y_Table = 150;      //Координаты столов variants
    for (int i = 0; i < count_variants; i = i + 1)
    {
        variants[i].x = 1100;
        if (variants[i].category == "Bed")
        {
            variants[i].y = y_Bed;
            y_Bed = y_Bed + 150;
        }
        if (variants[i].category == "Sofa")
        {
            variants[i].y = y_Sofa;
            y_Sofa = y_Sofa + 100;
        }

        if(variants[i].category == "Table")
        {
            variants[i].y = y_Table;
            y_Table = y_Table + 150;
        }
    }








    int count_Plans = 3;

    Picture Plans[count_Plans];
    Plans[0] = {1100, 150, "Картинки/Планы/План_1.bmp", false, "Plan"};
    Plans[1] = {1100, 350, "Картинки/Планы/План_2.bmp", false, "Plan"};
    Plans[2] = {1100, 500, "Картинки/Планы/План_3.bmp", false, "Plan"};
    //Plans[2] = {1100, 550, 192, 212, txLoadImage("Картинки/Кровати/План_3_мини.bmp"), false, "Bed"};


    int y_Plans = 150;      //Координаты планов variants
    for (int nomer = 0; nomer < count_Plans; nomer = nomer + 1)
    {
        Plans[nomer].picture = txLoadImage(Plans[nomer].address);
        Plans[nomer].width = getWidth (Plans[nomer].address);
        Plans[nomer].height = getHeight(Plans[nomer].address);

        Plans[nomer].x = 1100;
        if(Plans[nomer].category == "Plan")
        {
            Plans[nomer].y = y_Plans;
            y_Plans = y_Plans + 200;
        }
    }






    //Центр. картинки
    Picture Bed2[2500];
    int n_pics = 0;

    while(!GetAsyncKeyState(VK_ESCAPE))
    {
        txBegin();
        txClear();

        //Стартовая страница)
        if (PAGE == "start")
        {
            txTransparentBlt (txDC(), Menu.x, Menu.y, 1300, 750, Menu.picture, 0,  0, RGB(255, 127, 39));

            //Надпись в меню / название
            txSelectFont ("Comic Sans MS", 80);
            txSetColor(TX_RED);
            txDrawText(0, 0, txGetExtentX(), txGetExtentY() / 3, "Создай свой дизайн квартиры" );

            //Кнопки в меню
            for(int nomer = 0; nomer < 3; nomer = nomer +1)
            {
                if (txMouseX() >= Button_MENU[nomer].x &&
                    txMouseY() >= Button_MENU[nomer].y &&
                    txMouseX() <= Button_MENU[nomer].x + 500 &&
                    txMouseY() <= Button_MENU[nomer].y + 100)
                {
                    Button_MENU[nomer].draw();
                }
            }

            //Клик на выход
            if (Button_MENU[2].click())
            {
                txDisableAutoPause();
                return 0;
            }

            //Клик на играть
            if (Button_MENU[1].click())
            {
                PAGE = "redactor";
            }
            //Клик на справку
            if (Button_MENU[0].click())
            {
                PAGE = "settings";
            }
        }

        //Настройки
        else if(PAGE == "settings")
        {
            txSetFillColor(TX_WHITE);
            txRectangle(0, 0, 1300, 750);

            //Кнопка "назад"
            Win32::TransparentBlt(txDC(), x_Strelka + 5, y_Strelka + 5, 50, 50, Strelka, 0, 0, 225,225, TX_RED);
            txSetColor(TX_BLACK);
            txSelectFont("Comic Sans MS", 50);
            txTextOut(40, 7, "Назад");

            //2 кровати по бокам в справке
            txTransparentBlt(txDC(), 100,  550, 131, 135, variants[0].picture, 0, 0, TX_YELLOW);
            txTransparentBlt(txDC(), 1000, 550, 189, 131, variants[1].picture, 0, 0, TX_YELLOW);
            //Реклама
            txTransparentBlt(txDC(), 500, 450, 300, 200, reklama, 0, 0, TX_YELLOW);

            //Клик на кнопку "назад"
            if (txMouseX() >= 0 && txMouseX() <= 150 &&
                txMouseY() >= 0 && txMouseY() <= 100 &&
                txMouseButtons() & 1)
            {
                PAGE = "start";
                category = "";
            }

            //Текст в справке
            txSetColor(TX_BLACK);
            txSelectFont("Arial", 50);
            txDrawText(200, 100, 1100, 200,
                        "Привет, это симулятор создания квартиры!");
            txSelectFont("Arial", 40);
            txDrawText(270, 200, 1000, 900, "Цель этой игры - весело провести время!\n"
                        "Ты можешь выбирать любой из данных предметов\n"
                        " мебели, перетаскивать их в нужное место,\n"
                        " и построить свою квартиру! Если нужно \n"
                        " удалить предмет, зажми его и нажми Delete!\n");
        }

        //Редактор)
        else if (PAGE == "redactor")
        {
            //Меню
            txSetFillColour(TX_WHITE);

            //Координатная сетка /фон
            txBitBlt(txDC(), x_Plan_, y_Plan_, 1290, 740, Plan_);

            for (int nomer = 0; nomer < count_button; nomer = nomer +1)
            {
                //А что тебе координаты самой кнопки не взять?
                txTransparentBlt(txDC(), x_button_0,  y_button_0, 214, 66, button_0, 0, 0, TX_YELLOW);
                x_button_0 = x_button_0 + 250;
            }

            //Жёлтые кнопки наверху экрана
            for (int nomer = 0; nomer < count_button; nomer = nomer +1)
            {
                //Это что еще такое?
                /*if( txMouseX() >= Button[nomer].x &&
                    txMouseY() >= Button[nomer].y &&
                    txMouseX() <= Button[nomer].x + 200 &&
                    txMouseY() <= Button[nomer].y + 60) */
                {
                    Button[nomer].draw();
                }
            }

            if(drawOBL)
            {
                drawObl(Krestik);
            }


            //Выбор категории
            for(int nomer = 0; nomer < count_button; nomer = nomer + 1)
            {
                if (Button[nomer].click())
                {
                    category = Button[nomer].category;
                    drawOBL = true;
                }
            }

            //Выход из категории
            if(txMouseX() >= 1100   && txMouseY() >= 60  && txMouseX() <= 1140 && txMouseY() <= 100 &&
                txMouseButtons () ==1)
            {
                drawOBL = false;
                category="";
            }


            //клик на план
            for (int nomer = 0; nomer <  count_Plans; nomer = nomer + 1)
            {
                if (txMouseX() >= Plans[nomer].x    &&
                    txMouseY() >= Plans[nomer].y  &&
                    txMouseX() <= Plans[nomer].x +  150 &&
                    txMouseY() <= Plans[nomer].y +  120 &&
                    txMouseButtons () ==1 && category == Plans[nomer].category)
                {
                    Plan_ = Plans[nomer].picture;
                }
            }


            //Выбор мебели и её рисование(рандомное)
            for (int nomer = 0; nomer <  count_variants; nomer = nomer + 1)
            {
                if (txMouseX() >= variants[nomer].x    &&
                    txMouseY() >= variants[nomer].y  &&
                    txMouseX() <= variants[nomer].x +  variants[nomer].width &&
                    txMouseY() <= variants[nomer].y +  variants[nomer].height &&
                    txMouseButtons () ==1 && category == variants[nomer].category && klik == true)
                {
                     Bed2[n_pics] = {random(100, 800), random(100, 600),  variants[nomer].address, true, "Bed",
                     variants[nomer].picture, variants[nomer].width, variants[nomer].height};

                     n_pics++;
                     klik = false;
                }
            }

            //Движение картинки
            Active_Pic = movePic(Bed2, Active_Pic, n_pics);

            //Удаление картинки путём смены местами Active_Pic и n_pics
            if(Active_Pic >= 0 && txMouseButtons() == 1 && GetAsyncKeyState(VK_DELETE) && klik == true)
            {
               /* char str[100];
                sprintf(str, "%d", Active_Pic);
                txMessageBox(str);*/

                if (n_pics > 1)
                {

                    Bed2[Active_Pic].height = Bed2[n_pics-1].height;
                    Bed2[Active_Pic].width = Bed2[n_pics-1].width;
                    Bed2[Active_Pic].x = Bed2[n_pics-1].x;
                    Bed2[Active_Pic].y = Bed2[n_pics-1].y;
                    Bed2[Active_Pic].picture = Bed2[n_pics-1].picture;
                }


                n_pics = n_pics - 1;
                Active_Pic = -999;
            }


            if(txMouseButtons () == 0)
                klik = true;

            //Анти попадание на чёрный цвет в плане
            /*for (int nomer = 0; nomer <  9; nomer = nomer + 1)
            nomer =

            if(txGetPixel(Bed2[Active_Pic].x, Bed2[Active_Pic].y) == TX_BLACK)
            {
                Bed2[Active_Pic].x = Bed2[Active_Pic].x + 200;
            }*/



            if(GetAsyncKeyState('P'))
            {
                PAGE = "start";
            }

            //А почему не сделать паузу 2 картинками как с настройками и плеем?
            if (txMouseX() >= 1210   && txMouseY() >=10  && txMouseX() <=1290 && txMouseY() <=50)
            {
                Pause.x_kadr = 1;
            }
            else
            {
                Pause.x_kadr = 0;
            }

            if (txMouseX() >=1220   && txMouseY() >= 1  && txMouseX() <=1300 && txMouseY() <=77&&
                txMouseButtons () ==1)
            {
                txPlaySound("2.wav", SND_ASYNC);
                PAGE = "start";
            }



            //Категория планов квартиры
            drawAllPlans(category, Plans, count_Plans);
            //Рисование мебели
            drawAllBED2(Bed2, n_pics);
            drawAllVariants(category, variants, count_variants);

            txTransparentBlt (txDC(), Pause.x + 5, Pause.y , 80, 45, Pause.picture, 80 * Pause.x_kadr,  0, RGB(255, 127, 39));
        }

        txSleep(20);
        txEnd();
    }

    //Удаление картинок
    txDeleteDC(Fon);
    txDeleteDC(Strelka);
    txDeleteDC(Krestik);
    txDeleteDC(reklama);

    deletePicBed(variants, count_variants, Plans);
    deletePic(Button, Button_MENU, Menu, Pause);

    return 0;
}
